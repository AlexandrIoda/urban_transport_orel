# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:mysql://localhost:3306/urban_transport?useSSL=false
spring.datasource.username=springuser
spring.datasource.password=EKNMGaGmhI93tg3T!
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.max-active=5
spring.datasource.tomcat.test-on-borrow=true
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
#NOTE:If this was actually a production database, you not tell Hibernate to use the create-drop option.
# This tells Hibernate to recreate the database on startup. Definitely not the behavior we want.
# You can set this property to the following values: none, validate, update, create-drop.
# If this was actually a production database, you probably would want to use validate.
spring.jpa.hibernate.ddl-auto=update
# ===============================
# = LOGGING
# ===============================
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
# ===============================
# TOMCAT
# ===============================
server.address=127.0.0.1
server.error.whitelabel.enabled=false
server.tomcat.accesslog.enabled=true
# ===============================
# SMTP EMAIL
# ===============================
spring.mail.host=smtp.gmail.com
spring.mail.username=userspringuser@gmail.com
spring.mail.password=EKNMGaGmhI93tg3T!
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false